:root {
    --theme-color: #0a87da;
    --main-bg-color: #0a87da;
    --main-bg-color-transparent: #0a87da15;
    --main-border-color: #00000024;
    --main-box-shadow: rgba(116, 129, 141, 0.1) 0em 0.2em 0.8em 0em;
    --hover-box-shadow: rgba(116, 129, 141, 0.15) 0em 0.8em 0.8em 0.1em;
    --high-box-shadow: rgba(116, 129, 141, 0.35) 0em 0.3em 0.8em 0em;
    --main-transition: 250ms ease 0s;
}

/* fix <code> overflowing to edge on small width screen. */
/* NOT NEEDED on `themeable.responsiveTables: false`
/*.markdown-section code:not([class*="lang-"]):not([class*="language-"]) {
    white-space: pre-wrap;
    word-break: break-word;
}/**/

/* fix <a> & <td> overflowing to edge on small width screen .*/
/* NOT NEEDED on `themeable.responsiveTables: false`
.markdown-section a,
td{
    word-break: break-word;
}/**/

.my-card{
    font-size: 80%;
    margin-bottom: 1em;
    padding: 1.7em;
    border-style: solid;
    border-width: 0.05em;
    border-radius: 0.4em;
    border-color: var(--main-border-color);
    box-shadow: var(--main-box-shadow);
    transition: var(--main-transition);
}

.my-card:hover{
    border-color: var(--main-bg-color);
    box-shadow: var(--hover-box-shadow);
}

.my-card a, 
.my-card a:hover{
    text-decoration-line: none;
    color: var(--main-bg-color);
}

/* Increase clickable area of <a> within card */
.my-card a{
    display:block;
}
/* Except for <a> that inside <p>*/
.my-card p a {
    display: inline;
}

/* Override for Vue themes, to remove too high of default padding of <h> */
.my-card h4,
.my-card h3,
.my-card h5
{
    margin-block-start: 0em;
    margin-block-end: 0em;
}

.my-btn{
    padding: 0.5em;
    padding-left: 1em;
    padding-right: 1em;
    border-style: solid;
    border-width: 0.05em;
    border-radius: 5em;
    border-color: var(--main-border-color);
    transition: 250ms ease 0s;
    background-color: var(--main-bg-color);
    color: #fff;
    font-weight: 700;
    transition: var(--main-transition);
}

.my-btn:hover,
.my-btn:focus{
    filter: brightness(110%);
    box-shadow: var(--high-box-shadow);
    transform: scale(1.05) translate(0em, -0em);
}

/* Downsize font for code & table, to make it seem compact and short */
.markdown-section code:not([class*="lang-"]):not([class*="language-"]),
.markdown-section code[class*="lang-"], 
.markdown-section pre[data-lang],
.markdown-section table code:not([class*="lang-"]):not([class*="language-"]),
table{
    font-size: 90%;
}

iframe{
    border: 0
}

/* Override non aesthetic "-" prefix on sidebar h2 link*/
.section-link::before,
.sidebar-nav li>a:before, 
.app-sub-sidebar li::before 
{
    display: none !important;
}

/* Center all image of body content */
.markdown-section img {
    margin-left: auto;
    margin-right: auto;
    display: block;
}

.sidebar-nav li.active>a[href^="#/"]:not([href*="?id="]):not(:only-child),
.sidebar-nav li.collapse>a[href^="#/"]:not([href*="?id="]):not(:only-child),
.sidebar-nav li>a[href^="#/"]:not([href*="?id="]):not(:only-child),
.sidebar-nav li>a[href^="#/"]:not([href*="?id="]):only-child
{
    background-image: unset;
    background-position: unset;
}
.sidebar-nav li>a[href^="#/"]:not([href*="?id="]), 
.sidebar-nav li>a[href^="#/"]:not([href*="?id="]) ~ ul a
{
    /*padding: unset;*/
    padding: 0.25em 0 0.25em 0;
}

/* Override sidebar nav menu effect*/
:root{
    --sidebar-nav-indent: 0.7em;
}
.sidebar-nav li>a,
.sidebar-nav li
{
    transition: var(--main-transition);
}
.sidebar-nav li>a:hover,
.sidebar-nav li.active>a
/*,.sidebar-nav li>a:focus*/
{
    /*text-decoration: unset;*/
    background-color: var(--main-bg-color-transparent);
    padding-left: 2em !important;
    margin-left: -2em !important;
    border-right-color: var(--sidebar-nav-link-border-color--active, var(--sidebar-nav-link-border-color));
}